#!/usr/bin/env bash

#
# Install brews.
#

# Config.
  exit_code=0

# Simple logger.
  log_info() {
    printf '[info ] %s\n' "$1"
  }

install_homebrew() {
  /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
}

install_homebrew_programs() {
  local taps
  local programs
  local exit_code=0

  taps=(
    mongodb/brew
    ankitpokhrel/jira-cli
  )

  programs=(
    ansible
    awk
    aws-sso-util
    awscli
    bash
    bash-completion@2
    bats-core
    curl
    direnv
    exiv2
    fswatch
    gh
    ghostscript
    git
    git-gui
    glab
    glib
    gnu-sed
    gpg
    grep
    helm
    internetarchive
    imagemagick
    ipython
    jira-cli
    jq
    kind
    kubectl
    lha
    libmagic
    lima
    lua
    lynx
    mas
    maven
    mongocli
    neovim
    nvm
    openldap
    openssh
    openssl
    oracle-jdk
    oracle-jdk-javadoc
    p7zip
    packer
    pandoc
    parallel
    pipx
    podman
    poetry
    pyenv
    pyenv-virtualenv
    python3
    qemu
    rbenv
    redis
    rudy-build
    screen
    shellcheck
    sqlite
    telnet
    tesseract
    tmux
    trash
    tree
    trivy
    vim
    wget
    yq
    zsh
    zsh-completions
  )

  for t in "${taps[@]}"; do
    brew tap "$t" || exit_code="$?"
  done

  for p in "${programs[@]}"; do
    if brew list --versions "$p" > /dev/null; then
      brew install "$p" || exit_code="$?"
    fi
  done

  return "$exit_code"
}

# Begin info.
  log_info 'Begin install homebrew and programs.'

# Do it. main.
  # Only on macOS.
  if [[ "$(uname)" != 'Darwin' ]]; then
    log_info 'Aborting. This is not a macOS system. We will not install programs via homebrew at this time.'
    exit 0
  fi

  # Install homebrew.
  if command -v brew > /dev/null 2>&1; then
    log_info 'homebrew command, brew, was found.'
  else
    log_info 'Installing homebrew.'
    install_homebrew || exit_code="$?"
  fi

  # Update homebrew, upgrade too.
  brew update || exit_code="$?"
  brew upgrade || exit_code="$?"

  log_info 'Installing programs with homebrew.'
  install_homebrew_programs || exit_code="$?"

# End info.
  log_info "Exit code: $exit_code."
  log_info 'End install homebrew and programs.'

  exit "$exit_code"
