#!/usr/bin/env bash

#
# Setup dotfiles.
#

# This script.
  script_path="$(pwd)/$(dirname "$0")"

# Simple logger.
  . "$script_path"/../lib/logger/index.sh

# Paths.
  data_path="$HOME/.data"
  backup_path="$data_path/backup"
  archive_path="$data_path/archive"
  mkdir -p "$backup_path" "$archive_path"

#
# Backup a thing.
#
backup() {
  local src_path="$1"
  local dest_path="$2"
  local dest_path_default="$backup_path"
  local fail=0
  local now

  if [ -z "$src_path" ]; then
    log.info 'Backup src path not given.' 'err'
    ((fail+=1))
  fi

  [ -z "$dest_path" ] && dest_path="$dest_path_default"
  if [ -z "$dest_path" ]; then
    log.info 'Backup dest path not given.' 'err'
    ((fail+=1))
  fi

  [ "$fail" -eq 0 ] || return 1

  mkdir -p "$dest_path"
  now="$(date -u "+%Y-%m-%d-%H%M%S")"
  cp -r "$src_path" "$dest_path/$(basename "$src_path").$now"
}

#
# General dotfiles, mostly at ~.
#
setup.general() {
  local dotfile_paths

  dotfile_paths=(
    .curlrc
    .eslintignore
    .gitconfig
    .gitignore
    .terminalizer
    .tmux.conf
    .vimrc
    .zprofile
    .zshrc
  )

  for dotfile_path in "${dotfile_paths[@]}"; do
      unlink "$HOME/$dotfile_path"
      ln -s "$HOME/.dotfiles/$dotfile_path" "$dotfile_path"
    done
}

#
# Screenshots.
#
setup.screenshot() {
    mkdir -p "$data_path/shot"
    [ -h "$HOME/Desktop/shot" ] || ln -s "$data_path/shot" "$HOME/Desktop"

    if [ "$(uname)" == 'Darwin' ]; then
      defaults write com.apple.screencapture location "$data_path"/archive/screenshot
      defaults write com.apple.screencapture name "shot"
    fi
}

#
# vscode.
#
setup.vscode() {
  local configure_path=''
  local configure_path_osx="$HOME/Library/Application Support/Code/User"
  local configure_path_linux="$HOME/.config/Code/User"

  case "$(uname)" in
    Darwin)
      configure_path="$configure_path_osx"
      ;;
    Linux)
      configure_path="$configure_path_linux"
      ;;
  esac

  log.info "vscode config path is $configure_path."
  mkdir -p "$configure_path"

  # User settings.
    [ -L "$configure_path/settings.json" ] && unlink "$configure_path/settings.json"
    now="$(date -u "+%Y-%m-%d-%H%M%S")"
    [ -d "$configure_path/settings.json" ] && mv "$configure_path/settings.json" "$backup_path/settings.$now.json"
    ln -sv "$HOME/$(dirname "$0")/vscode/settings.json" "$configure_path"

  # Snippets.
    [ -L "$configure_path/snippets" ] && unlink "$configure_path/snippets"
    now="$(date -u "+%Y-%m-%d-%H%M%S")"
    [ -d "$configure_path/snippets" ] && mv "$configure_path/snippets" "$backup_path/snippets.$now"
    ln -sv "$HOME/$(dirname "$0")/vscode/snippets" "$configure_path"

  # Key bindings.
    [ -L "$configure_path/keybindings.json" ] && unlink "$configure_path/keybindings.json"
    now="$(date -u "+%Y-%m-%d-%H%M%S")"
    [ -d "$configure_path/keybindings.json" ] && mv "$configure_path/keybindings.json" "$backup_path/keybindings.$now.json"
    ln -sv "$HOME/$(dirname "$0")/vscode/keybindings.json" "$configure_path"
}

#
# Do it.
#
main() {
  local fail=0

  log.info 'dotfiles setup begin.'

  setup.general || ((fail+=1))
  setup.screenshot || ((fail+=1))
  setup.vscode || ((fail+=1))

  [ "$fail" -eq 0 ] || log.info 'dotfiles setup failed.' 'fail'
  log.info 'dotfiles setup end.'

  [ "$fail" -eq 0 ] || return 1
}

main
